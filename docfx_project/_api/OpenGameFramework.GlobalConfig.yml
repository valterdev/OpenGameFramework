### YamlMime:ManagedReference
items:
- uid: OpenGameFramework.GlobalConfig
  commentId: T:OpenGameFramework.GlobalConfig
  id: GlobalConfig
  parent: OpenGameFramework
  children:
  - OpenGameFramework.GlobalConfig.GetConfigOfType``1
  - OpenGameFramework.GlobalConfig.ModuleConfigs
  langs:
  - csharp
  - vb
  name: GlobalConfig
  nameWithType: GlobalConfig
  fullName: OpenGameFramework.GlobalConfig
  type: Class
  source:
    id: GlobalConfig
    path: ''
    startLine: 2139
  assemblies:
  - cs.temp.dll
  namespace: OpenGameFramework
  syntax:
    content: 'public class GlobalConfig : ScriptableObject'
    content.vb: >-
      Public Class GlobalConfig
          Inherits ScriptableObject
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenGameFramework.GlobalConfig.ModuleConfigs
  commentId: P:OpenGameFramework.GlobalConfig.ModuleConfigs
  id: ModuleConfigs
  parent: OpenGameFramework.GlobalConfig
  langs:
  - csharp
  - vb
  name: ModuleConfigs
  nameWithType: GlobalConfig.ModuleConfigs
  fullName: OpenGameFramework.GlobalConfig.ModuleConfigs
  type: Property
  source:
    id: ModuleConfigs
    path: ''
    startLine: 2154
  assemblies:
  - cs.temp.dll
  namespace: OpenGameFramework
  syntax:
    content: public List<ModuleConfig> ModuleConfigs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{OpenGameFramework.ModuleConfig}
    content.vb: Public ReadOnly Property ModuleConfigs As List(Of ModuleConfig)
  overload: OpenGameFramework.GlobalConfig.ModuleConfigs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OpenGameFramework.GlobalConfig.GetConfigOfType``1
  commentId: M:OpenGameFramework.GlobalConfig.GetConfigOfType``1
  id: GetConfigOfType``1
  parent: OpenGameFramework.GlobalConfig
  langs:
  - csharp
  - vb
  name: GetConfigOfType<T>()
  nameWithType: GlobalConfig.GetConfigOfType<T>()
  fullName: OpenGameFramework.GlobalConfig.GetConfigOfType<T>()
  type: Method
  source:
    id: GetConfigOfType
    path: ''
    startLine: 2164
  assemblies:
  - cs.temp.dll
  namespace: OpenGameFramework
  syntax:
    content: >-
      public T GetConfigOfType<T>()
          where T : ModuleConfig
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetConfigOfType(Of T As ModuleConfig) As T
  overload: OpenGameFramework.GlobalConfig.GetConfigOfType*
  nameWithType.vb: GlobalConfig.GetConfigOfType(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OpenGameFramework.GlobalConfig.GetConfigOfType(Of T)()
  name.vb: GetConfigOfType(Of T)()
references:
- uid: OpenGameFramework
  commentId: N:OpenGameFramework
  name: OpenGameFramework
  nameWithType: OpenGameFramework
  fullName: OpenGameFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OpenGameFramework.GlobalConfig.ModuleConfigs*
  commentId: Overload:OpenGameFramework.GlobalConfig.ModuleConfigs
  name: ModuleConfigs
  nameWithType: GlobalConfig.ModuleConfigs
  fullName: OpenGameFramework.GlobalConfig.ModuleConfigs
- uid: System.Collections.Generic.List{OpenGameFramework.ModuleConfig}
  commentId: T:System.Collections.Generic.List{OpenGameFramework.ModuleConfig}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ModuleConfig>
  nameWithType: List<ModuleConfig>
  fullName: System.Collections.Generic.List<OpenGameFramework.ModuleConfig>
  nameWithType.vb: List(Of ModuleConfig)
  fullName.vb: System.Collections.Generic.List(Of OpenGameFramework.ModuleConfig)
  name.vb: List(Of ModuleConfig)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenGameFramework.ModuleConfig
    name: ModuleConfig
    nameWithType: ModuleConfig
    fullName: OpenGameFramework.ModuleConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenGameFramework.ModuleConfig
    name: ModuleConfig
    nameWithType: ModuleConfig
    fullName: OpenGameFramework.ModuleConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: OpenGameFramework.GlobalConfig.GetConfigOfType*
  commentId: Overload:OpenGameFramework.GlobalConfig.GetConfigOfType
  name: GetConfigOfType
  nameWithType: GlobalConfig.GetConfigOfType
  fullName: OpenGameFramework.GlobalConfig.GetConfigOfType
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
