### YamlMime:ManagedReference
items:
- uid: OpenGameFramework.DI.EasyDiContainer
  commentId: T:OpenGameFramework.DI.EasyDiContainer
  id: EasyDiContainer
  parent: OpenGameFramework.DI
  children:
  - OpenGameFramework.DI.EasyDiContainer.AllInjectedServices
  - OpenGameFramework.DI.EasyDiContainer.CreateInstance(Type,System.Object[])
  - OpenGameFramework.DI.EasyDiContainer.CreateInstance``1(System.Object[])
  - OpenGameFramework.DI.EasyDiContainer.GetInstance``1
  - OpenGameFramework.DI.EasyDiContainer.Init
  - OpenGameFramework.DI.EasyDiContainer.InitService(Type)
  - OpenGameFramework.DI.EasyDiContainer.InitService``1
  - OpenGameFramework.DI.EasyDiContainer.RegisterService(Type,System.Object)
  langs:
  - csharp
  - vb
  name: EasyDiContainer
  nameWithType: EasyDiContainer
  fullName: OpenGameFramework.DI.EasyDiContainer
  type: Class
  source:
    id: EasyDiContainer
    path: ''
    startLine: 100
  assemblies:
  - cs.temp.dll
  namespace: OpenGameFramework.DI
  syntax:
    content: public class EasyDiContainer
    content.vb: Public Class EasyDiContainer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenGameFramework.DI.EasyDiContainer.AllInjectedServices
  commentId: F:OpenGameFramework.DI.EasyDiContainer.AllInjectedServices
  id: AllInjectedServices
  parent: OpenGameFramework.DI.EasyDiContainer
  langs:
  - csharp
  - vb
  name: AllInjectedServices
  nameWithType: EasyDiContainer.AllInjectedServices
  fullName: OpenGameFramework.DI.EasyDiContainer.AllInjectedServices
  type: Field
  source:
    id: AllInjectedServices
    path: ''
    startLine: 104
  assemblies:
  - cs.temp.dll
  namespace: OpenGameFramework.DI
  syntax:
    content: public List<ServiceTypeInfo> AllInjectedServices
    return:
      type: System.Collections.Generic.List{OpenGameFramework.DI.ServiceTypeInfo}
    content.vb: Public AllInjectedServices As List(Of ServiceTypeInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenGameFramework.DI.EasyDiContainer.Init
  commentId: M:OpenGameFramework.DI.EasyDiContainer.Init
  id: Init
  parent: OpenGameFramework.DI.EasyDiContainer
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: EasyDiContainer.Init()
  fullName: OpenGameFramework.DI.EasyDiContainer.Init()
  type: Method
  source:
    id: Init
    path: ''
    startLine: 105
  assemblies:
  - cs.temp.dll
  namespace: OpenGameFramework.DI
  syntax:
    content: public void Init()
    content.vb: Public Sub Init
  overload: OpenGameFramework.DI.EasyDiContainer.Init*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenGameFramework.DI.EasyDiContainer.RegisterService(Type,System.Object)
  commentId: M:OpenGameFramework.DI.EasyDiContainer.RegisterService(Type,System.Object)
  id: RegisterService(Type,System.Object)
  parent: OpenGameFramework.DI.EasyDiContainer
  langs:
  - csharp
  - vb
  name: RegisterService(Type, Object)
  nameWithType: EasyDiContainer.RegisterService(Type, Object)
  fullName: OpenGameFramework.DI.EasyDiContainer.RegisterService(Type, System.Object)
  type: Method
  source:
    id: RegisterService
    path: ''
    startLine: 154
  assemblies:
  - cs.temp.dll
  namespace: OpenGameFramework.DI
  syntax:
    content: public void RegisterService(Type interfaceType, object realisationType)
    parameters:
    - id: interfaceType
      type: Type
    - id: realisationType
      type: System.Object
    content.vb: Public Sub RegisterService(interfaceType As Type, realisationType As Object)
  overload: OpenGameFramework.DI.EasyDiContainer.RegisterService*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenGameFramework.DI.EasyDiContainer.GetInstance``1
  commentId: M:OpenGameFramework.DI.EasyDiContainer.GetInstance``1
  id: GetInstance``1
  parent: OpenGameFramework.DI.EasyDiContainer
  langs:
  - csharp
  - vb
  name: GetInstance<T>()
  nameWithType: EasyDiContainer.GetInstance<T>()
  fullName: OpenGameFramework.DI.EasyDiContainer.GetInstance<T>()
  type: Method
  source:
    id: GetInstance
    path: ''
    startLine: 159
  assemblies:
  - cs.temp.dll
  namespace: OpenGameFramework.DI
  syntax:
    content: >-
      public T GetInstance<T>()
          where T : class
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetInstance(Of T As Class) As T
  overload: OpenGameFramework.DI.EasyDiContainer.GetInstance*
  nameWithType.vb: EasyDiContainer.GetInstance(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OpenGameFramework.DI.EasyDiContainer.GetInstance(Of T)()
  name.vb: GetInstance(Of T)()
- uid: OpenGameFramework.DI.EasyDiContainer.InitService(Type)
  commentId: M:OpenGameFramework.DI.EasyDiContainer.InitService(Type)
  id: InitService(Type)
  parent: OpenGameFramework.DI.EasyDiContainer
  langs:
  - csharp
  - vb
  name: InitService(Type)
  nameWithType: EasyDiContainer.InitService(Type)
  fullName: OpenGameFramework.DI.EasyDiContainer.InitService(Type)
  type: Method
  source:
    id: InitService
    path: ''
    startLine: 164
  assemblies:
  - cs.temp.dll
  namespace: OpenGameFramework.DI
  syntax:
    content: public IServiceDi InitService(Type curType)
    parameters:
    - id: curType
      type: Type
    return:
      type: OpenGameFramework.DI.IServiceDi
    content.vb: Public Function InitService(curType As Type) As IServiceDi
  overload: OpenGameFramework.DI.EasyDiContainer.InitService*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenGameFramework.DI.EasyDiContainer.InitService``1
  commentId: M:OpenGameFramework.DI.EasyDiContainer.InitService``1
  id: InitService``1
  parent: OpenGameFramework.DI.EasyDiContainer
  langs:
  - csharp
  - vb
  name: InitService<T>()
  nameWithType: EasyDiContainer.InitService<T>()
  fullName: OpenGameFramework.DI.EasyDiContainer.InitService<T>()
  type: Method
  source:
    id: InitService
    path: ''
    startLine: 177
  assemblies:
  - cs.temp.dll
  namespace: OpenGameFramework.DI
  syntax:
    content: >-
      public T InitService<T>()
          where T : class
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function InitService(Of T As Class) As T
  overload: OpenGameFramework.DI.EasyDiContainer.InitService*
  nameWithType.vb: EasyDiContainer.InitService(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OpenGameFramework.DI.EasyDiContainer.InitService(Of T)()
  name.vb: InitService(Of T)()
- uid: OpenGameFramework.DI.EasyDiContainer.CreateInstance(Type,System.Object[])
  commentId: M:OpenGameFramework.DI.EasyDiContainer.CreateInstance(Type,System.Object[])
  id: CreateInstance(Type,System.Object[])
  parent: OpenGameFramework.DI.EasyDiContainer
  langs:
  - csharp
  - vb
  name: CreateInstance(Type, Object[])
  nameWithType: EasyDiContainer.CreateInstance(Type, Object[])
  fullName: OpenGameFramework.DI.EasyDiContainer.CreateInstance(Type, System.Object[])
  type: Method
  source:
    id: CreateInstance
    path: ''
    startLine: 199
  assemblies:
  - cs.temp.dll
  namespace: OpenGameFramework.DI
  syntax:
    content: public IServiceDi CreateInstance(Type objType, params object[] paramArray)
    parameters:
    - id: objType
      type: Type
    - id: paramArray
      type: System.Object[]
    return:
      type: OpenGameFramework.DI.IServiceDi
    content.vb: Public Function CreateInstance(objType As Type, ParamArray paramArray As Object()) As IServiceDi
  overload: OpenGameFramework.DI.EasyDiContainer.CreateInstance*
  nameWithType.vb: EasyDiContainer.CreateInstance(Type, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OpenGameFramework.DI.EasyDiContainer.CreateInstance(Type, System.Object())
  name.vb: CreateInstance(Type, Object())
- uid: OpenGameFramework.DI.EasyDiContainer.CreateInstance``1(System.Object[])
  commentId: M:OpenGameFramework.DI.EasyDiContainer.CreateInstance``1(System.Object[])
  id: CreateInstance``1(System.Object[])
  parent: OpenGameFramework.DI.EasyDiContainer
  langs:
  - csharp
  - vb
  name: CreateInstance<T>(Object[])
  nameWithType: EasyDiContainer.CreateInstance<T>(Object[])
  fullName: OpenGameFramework.DI.EasyDiContainer.CreateInstance<T>(System.Object[])
  type: Method
  source:
    id: CreateInstance
    path: ''
    startLine: 204
  assemblies:
  - cs.temp.dll
  namespace: OpenGameFramework.DI
  syntax:
    content: public T CreateInstance<T>(params object[] paramArray)
    parameters:
    - id: paramArray
      type: System.Object[]
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function CreateInstance(Of T)(ParamArray paramArray As Object()) As T
  overload: OpenGameFramework.DI.EasyDiContainer.CreateInstance*
  nameWithType.vb: EasyDiContainer.CreateInstance(Of T)(Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OpenGameFramework.DI.EasyDiContainer.CreateInstance(Of T)(System.Object())
  name.vb: CreateInstance(Of T)(Object())
references:
- uid: OpenGameFramework.DI
  commentId: N:OpenGameFramework.DI
  name: OpenGameFramework.DI
  nameWithType: OpenGameFramework.DI
  fullName: OpenGameFramework.DI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{OpenGameFramework.DI.ServiceTypeInfo}
  commentId: T:System.Collections.Generic.List{OpenGameFramework.DI.ServiceTypeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ServiceTypeInfo>
  nameWithType: List<ServiceTypeInfo>
  fullName: System.Collections.Generic.List<OpenGameFramework.DI.ServiceTypeInfo>
  nameWithType.vb: List(Of ServiceTypeInfo)
  fullName.vb: System.Collections.Generic.List(Of OpenGameFramework.DI.ServiceTypeInfo)
  name.vb: List(Of ServiceTypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenGameFramework.DI.ServiceTypeInfo
    name: ServiceTypeInfo
    nameWithType: ServiceTypeInfo
    fullName: OpenGameFramework.DI.ServiceTypeInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenGameFramework.DI.ServiceTypeInfo
    name: ServiceTypeInfo
    nameWithType: ServiceTypeInfo
    fullName: OpenGameFramework.DI.ServiceTypeInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: OpenGameFramework.DI.EasyDiContainer.Init*
  commentId: Overload:OpenGameFramework.DI.EasyDiContainer.Init
  name: Init
  nameWithType: EasyDiContainer.Init
  fullName: OpenGameFramework.DI.EasyDiContainer.Init
- uid: OpenGameFramework.DI.EasyDiContainer.RegisterService*
  commentId: Overload:OpenGameFramework.DI.EasyDiContainer.RegisterService
  name: RegisterService
  nameWithType: EasyDiContainer.RegisterService
  fullName: OpenGameFramework.DI.EasyDiContainer.RegisterService
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: OpenGameFramework.DI.EasyDiContainer.GetInstance*
  commentId: Overload:OpenGameFramework.DI.EasyDiContainer.GetInstance
  name: GetInstance
  nameWithType: EasyDiContainer.GetInstance
  fullName: OpenGameFramework.DI.EasyDiContainer.GetInstance
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: OpenGameFramework.DI.EasyDiContainer.InitService*
  commentId: Overload:OpenGameFramework.DI.EasyDiContainer.InitService
  name: InitService
  nameWithType: EasyDiContainer.InitService
  fullName: OpenGameFramework.DI.EasyDiContainer.InitService
- uid: OpenGameFramework.DI.IServiceDi
  commentId: T:OpenGameFramework.DI.IServiceDi
  parent: OpenGameFramework.DI
  name: IServiceDi
  nameWithType: IServiceDi
  fullName: OpenGameFramework.DI.IServiceDi
- uid: OpenGameFramework.DI.EasyDiContainer.CreateInstance*
  commentId: Overload:OpenGameFramework.DI.EasyDiContainer.CreateInstance
  name: CreateInstance
  nameWithType: EasyDiContainer.CreateInstance
  fullName: OpenGameFramework.DI.EasyDiContainer.CreateInstance
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
